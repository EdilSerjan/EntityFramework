@model IEnumerable<Milestone2.Models.Member>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Members</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@{
    if (TempData.Peek("Count") != null)
    {
        <p class="text-success">@TempData.Peek("Count")</p>
    }
    else
    {
        <p class="text-success"> You visited this page for the 1st time, refresh to see it change!</p>
    }
}
        @if (SignInManager.IsSignedIn(User)) {
                                <div class="container">
                        <div class="row">&nbsp;</div>
                        <div class="row">
                         @*   <div class="col-2">User</div> *@
                            <div class="col-4"><input type="hidden" id="userInput" value="@UserManager.GetUserName(User)"/></div>
                        </div>
                <div class="row">
                    <div class="col-2">Message</div>
                    <div class="col-4"><input type="text" id="messageInput" /></div>
                </div>
                <div class="row">&nbsp;</div>
                <div class="row">
                    <div class="col-6">
                        <input type="button" id="sendButton" value="Send Message" />
                    </div>
                </div>
            </div>
        }
        else
        {
            <p>Login to use the chat room!</p>
        }
    <div class="row">
        <div class="col-12">
            <hr />
            
            <p>Message List(You can also see who logged in):</p>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>

<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
